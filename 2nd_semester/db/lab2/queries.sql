/*
Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Таблицы: Н_ЛЮДИ, Н_СЕССИЯ.
Вывести атрибуты: Н_ЛЮДИ.ФАМИЛИЯ, Н_СЕССИЯ.ЧЛВК_ИД.
Фильтры (AND):
a) Н_ЛЮДИ.ИМЯ > Владимир.
b) Н_СЕССИЯ.ИД = 32199.
Вид соединения: RIGHT JOIN.
*/

SELECT p.ФАМИЛИЯ, s.ЧЛВК_ИД
FROM Н_СЕССИЯ s
RIGHT JOIN Н_ЛЮДИ p ON p.ИД = s.ЧЛВК_ИД
WHERE p.ИМЯ > 'Владимир'
    AND s.ИД = 32199;

/*
Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
Вывести атрибуты: Н_ЛЮДИ.ИД, Н_ВЕДОМОСТИ.ДАТА, Н_СЕССИЯ.ИД.
Фильтры (AND):
a) Н_ЛЮДИ.ИД = 163484.
b) Н_ВЕДОМОСТИ.ИД > 1250972.
c) Н_СЕССИЯ.УЧГОД > 2011/2012.
Вид соединения: INNER JOIN.
*/

SELECT p.ИД, p.ДАТА, s.ИД
FROM Н_ЛЮДИ p
JOIN Н_СЕССИЯ s ON p.ИД = s.ЧЛВК_ИД
JOIN Н_ВЕДОМОСТИ d ON p.ИД = d.ЧЛВК_ИД
WHERE p.ИД = 163484
    AND p.ИД > 1250972
    AND s.УЧГОД > '2011/2012';

/*
Вывести число названий дисциплин без учета повторений.
При составлении запроса нельзя использовать DISTINCT.
*/

SELECT НАИМЕНОВАНИЕ
FROM Н_ДИСЦИПЛИНЫ
GROUP BY НАИМЕНОВАНИЕ;

/*
Найти группы, в которых в 2011 году было более 5 обучающихся студентов на кафедре вычислительной техники.
Для реализации использовать подзапрос.
*/

SELECT ГРУППА, count(DISTINCT ЧЛВК_ИД) AS stud_count
FROM Н_УЧЕНИКИ
WHERE ПЛАН_ИД IN (
    SELECT ИД
    FROM Н_ПЛАНЫ
    WHERE НАПС_ИД IN (
        SELECT ИД
        FROM Н_НАПРАВЛЕНИЯ_СПЕЦИАЛ
        WHERE НС_ИД IN (
            SELECT ИД
            FROM Н_НАПР_СПЕЦ
            WHERE НАИМЕНОВАНИЕ ILIKE '%вычислительная%'
            )
        )
    )
    AND date_part('year', КОГДА_СОЗДАЛ) = 2011
    AND СОСТОЯНИЕ = 'утвержден'
GROUP BY ГРУППА
HAVING count(DISTINCT ЧЛВК_ИД) > 5;

/*
Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка), у которых средняя оценка больше минимальной оценк(е|и) в группе 1100.
*/

SELECT id_avg_score.ИД, p.ФАМИЛИЯ || ' ' || p.ИМЯ || ' ' || p.ОТЧЕСТВО AS ФИО, id_avg_score.avg_score
FROM (SELECT p.ИД, avg(CASE r.ОЦЕНКА WHEN 'зачет' THEN 5 WHEN 'незач' THEN 2 END) AS avg_score
    FROM Н_УЧЕНИКИ st JOIN Н_ОБУЧЕНИЯ ed ON ed.ЧЛВК_ИД = st.ЧЛВК_ИД
                        JOIN Н_ЛЮДИ p ON ed.ЧЛВК_ИД = p.ИД
                        JOIN Н_ВЕДОМОСТИ r ON p.ИД = r.ЧЛВК_ИД
    WHERE st.ГРУППА = '4100'
    GROUP BY p.ИД
    HAVING avg(CASE r.ОЦЕНКА WHEN 'зачет' THEN 5 WHEN 'незач' THEN 2 END) > (
        SELECT min(CASE r.ОЦЕНКА WHEN 'зачет' THEN 5 WHEN 'незач' THEN 2 END)
        FROM Н_УЧЕНИКИ st JOIN Н_ОБУЧЕНИЯ ed ON ed.ЧЛВК_ИД = st.ЧЛВК_ИД
                            JOIN Н_ЛЮДИ p ON ed.ЧЛВК_ИД = p.ИД
                            JOIN Н_ВЕДОМОСТИ r ON p.ИД = r.ЧЛВК_ИД
    WHERE st.ГРУППА = '1100'
    )) AS id_avg_score
RIGHT JOIN Н_ЛЮДИ p ON p.ИД = id_avg_score.ИД
WHERE avg_score IS NOT NULL;

/*
Получить список студентов, отчисленных до первого сентября 2012 года с очной формы обучения. В результат включить:
номер группы;
номер, фамилию, имя и отчество студента;
номер пункта приказа;
Для реализации использовать подзапрос с EXISTS.
*/

SELECT ФАМИЛИЯ, ИМЯ, ОТЧЕСТВО, ГРУППА, p.ИД, s.В_СВЯЗИ_С AS "номер пункта приказа"
FROM Н_ЛЮДИ p
LEFT JOIN Н_УЧЕНИКИ s ON p.ИД = s.ЧЛВК_ИД
WHERE EXISTS(
    SELECT ГРУППА, СОСТОЯНИЕ
    FROM Н_УЧЕНИКИ s
    LEFT JOIN Н_ПЛАНЫ plan ON plan.ИД = s.ПЛАН_ИД
    JOIN Н_ФОРМЫ_ОБУЧЕНИЯ form ON form.ИД = plan.ФО_ИД
    WHERE s.ЧЛВК_ИД = p.ИД
        AND СОСТОЯНИЕ = 'отменен'
        AND form.НАИМЕНОВАНИЕ = 'Очная'
        AND s.КОГДА_ИЗМЕНИЛ <= '2012-09-01'::date
);

/*
Вывести список людей, не являющихся или не являвшихся студентами ФКТИУ (данные, о которых отсутствуют в таблице Н_УЧЕНИКИ). В запросе нельзя использовать DISTINCT.
*/

SELECT p.ФАМИЛИЯ || ' ' || p.ИМЯ || ' ' || p.ОТЧЕСТВО AS ФИО
FROM Н_ЛЮДИ p
JOIN Н_УЧЕНИКИ s ON p.ИД = s.ЧЛВК_ИД
JOIN Н_ПЛАНЫ plan ON s.ПЛАН_ИД = plan.ИД
JOIN Н_ОТДЕЛЫ o ON plan.ОТД_ИД = o.ИД
WHERE o.КОРОТКОЕ_ИМЯ != 'КТиУ'

UNION

SELECT p.ФАМИЛИЯ || ' ' || p.ИМЯ || ' ' || p.ОТЧЕСТВО AS ФИО
FROM Н_ЛЮДИ p
WHERE p.ИД NOT IN (SELECT p.ИД
                    FROM Н_ЛЮДИ p
                    LEFT JOIN Н_УЧЕНИКИ s ON p.ИД = s.ЧЛВК_ИД);
